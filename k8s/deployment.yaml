apiVersion: apps/v1
kind: Deployment
metadata:
  name: ispaan-app
  labels:
    app: ispaan-app
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ispaan-app
  template:
    metadata:
      labels:
        app: ispaan-app
        version: v1.0.0
    spec:
      containers:
      - name: app
        image: ispaan:latest
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: HOSTNAME
          value: "0.0.0.0"
        - name: FIREBASE_PROJECT_ID
          valueFrom:
            secretKeyRef:
              name: ispaan-secrets
              key: firebase-project-id
        - name: FIREBASE_ADMIN_PROJECT_ID
          valueFrom:
            secretKeyRef:
              name: ispaan-secrets
              key: firebase-project-id
        - name: FIREBASE_ADMIN_CLIENT_EMAIL
          valueFrom:
            secretKeyRef:
              name: ispaan-secrets
              key: firebase-admin-client-email
        - name: FIREBASE_ADMIN_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: ispaan-secrets
              key: firebase-admin-private-key
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/app/credentials/service-account-key.json"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: ispaan-secrets
              key: jwt-secret
        - name: JWT_REFRESH_SECRET
          valueFrom:
            secretKeyRef:
              name: ispaan-secrets
              key: jwt-refresh-secret
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: NEXTAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: ispaan-secrets
              key: nextauth-secret
        - name: NEXTAUTH_URL
          value: "https://ispaan.co.za"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: credentials
          mountPath: /app/credentials
          readOnly: true
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: credentials
        secret:
          secretName: ispaan-credentials
      - name: logs
        emptyDir: {}
      imagePullSecrets:
      - name: registry-secret

---
apiVersion: v1
kind: Service
metadata:
  name: ispaan-service
  labels:
    app: ispaan-app
spec:
  selector:
    app: ispaan-app
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  labels:
    app: redis
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
          name: redis
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ispaan-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - ispaan.co.za
    - api.ispaan.co.za
    secretName: ispaan-tls
  rules:
  - host: ispaan.co.za
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ispaan-service
            port:
              number: 80
  - host: api.ispaan.co.za
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ispaan-service
            port:
              number: 80

---
apiVersion: v1
kind: Secret
metadata:
  name: ispaan-secrets
type: Opaque
data:
  firebase-project-id: <base64-encoded-project-id>
  firebase-admin-client-email: <base64-encoded-client-email>
  firebase-admin-private-key: <base64-encoded-private-key>
  jwt-secret: <base64-encoded-jwt-secret>
  jwt-refresh-secret: <base64-encoded-refresh-secret>
  nextauth-secret: <base64-encoded-nextauth-secret>

---
apiVersion: v1
kind: Secret
metadata:
  name: ispaan-credentials
type: Opaque
data:
  service-account-key.json: <base64-encoded-service-account-key>

---
apiVersion: v1
kind: Secret
metadata:
  name: registry-secret
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: <base64-encoded-docker-config>

